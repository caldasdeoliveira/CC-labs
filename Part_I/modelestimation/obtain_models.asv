%% Models

load('models.mat');

for i=1:9
    for n=1:length(N(1,:))
            % Modelling identif.

            t = model_data_for_estimation.time; 
            sigs = model_data_for_estimation.signals.values;



            utrend = sigs(:,1); % Entrada -  Input signal
            thetae = sigs(:,2); % Potenciómetro  -  Potentiometer signal
            alphae = sigs(:,3); % Extensómetro  - Starin gage signal

            % Reconstrução ângulo total da barra – Computation of total bar angle 
            ytrend = thetae*Kp + alphae*Ke;

            af = 0.8;
            Afilt = [1 -af];
            Bfilt = (1-af)*[1 -1] ;
            % Filtragem seguida de eliminação de tendências
            % Filtering and detrending
            yf = filter(Bfilt,Afilt,ytrend); % filtered and detrended y

            u = detrend(utrend);  % removing tref (average value)

            %Performing burn
            yf=yf(begin:stop);
            u=u(begin:stop);
            t=t(begin:stop);

            %performing identification


            th_model=th(:,:,i,1);  % th is a structure in identification toolbox format

            [den1,num1] = polydata(th_model(:,:)); %extraction of the coeficient vectors from th;

            yfsim = filter(num1,den1,u); % Equivalent to idsim(u,th) for comparison;  

            [~,fit(i,n)]=compare(z,th_model(:,:));
    end
end
